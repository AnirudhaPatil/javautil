---------------------------------------------------------------------------
CHANGELOG: org.clapper.util Java API

$Id$
---------------------------------------------------------------------------

Version 2.0 (22 April, 2005)

- Now requires Java 1.5.0 JDK/JRE.

- Converted various classes to use JDK 1.5 generics.

- The org.clapper.util.text.XStringBuffer class now implements
  java.lang.Appendable and java.lang.CharSequence.

- New class org.clapper.util.text.XStringBuilder provides similar
  functionality to XStringBuffer, except that it wraps a StringBuilder.
  Functionality common to XStringBuffer and XStringBuilder is in a new
  XStringBufBase class.

- org.clapper.util.config.Configuration class now supports an "env"
  pseudosection, to interpolate the values of environment variables into
  a configuration. (The 1.5 JDK has re-established support for environment
  variables.) See the javadocs for the Configuration class for details.

- org.clapper.util.io.JustifyTextWriter now uses (new) enum
  org.clapper.util.io.JustifyStyle to specify the justification style
  (CENTER, LEFT_JUSTIFY, RIGHT_JUSTIFY), instead of an "int".
  Unfortunately, this change is not backward-compatible with previous
  versions of this library.

- org.clapper.util.MultipleRegexFilenameFilter now uses enums for the
  match type values:

  * MultipleRegexFilenameFilter.MATCH_FILENAME becomes
    MultipleRegexFilenameFilter.MatchType.FILENAME

  * MultipleRegexFilenameFilter.MATCH_PATH becomes
    MultipleRegexFilenameFilter.MatchType.PATH

  Again, this change will force code changes on callers.

- org.clapper.util.text.MapVariableDereferencer now expects a
  java.util.Map<String,String> object, not just a Map object.

- To make it easier to use a java.util.Properties object with the
  org.clapper.util.text.VariableSubstituter class, there's now a type-safe
  org.clapper.util.misc.PropertiesMap wrapper for java.util.Properties.

- Add new (simple) org.clapper.util.io.XMLWriter class, used to write
  XML output.


Version 1.1.8 (21 April, 2005)

- Fixed bug in org.clapper.util.cmdline.CommandLineUtility class: Default
  version processPostOptionCommandLine() threw an unconditional exception.
  It should've thrown an exception only if the iterator still had something
  in it. This bug led to an erroneous usage message with utilities that
  expected no parameters and thus did not override the
  processPostOptionCommandLine() method. (Branch version fix.)

Version 1.1.7 (08 April, 2005)

- Miscellaneous Javadoc clarifications


Version 1.1.6 (09 February, 2005)

- Added TextUtil.split() methods that permit preserving empty strings. By
  default, the split() methods parse through adjacent empty tokens. e.g.,
  Given the string "a:b::c" and delimiter ":", the split() methods used to
  return the array ["a", "b", "c"], since the adjacent "::" delimiters were
  treated as one delimiter. Now, that behavior can be controlled by passing
  in a boolean, so that split() can return the array ["a", "b", "", "c"].

- Modified RegexUtil.substitute() to properly handle substitutions of the
  empty string. Strings like this were previously rejected as syntactically
  incorrect:

      s/foo//

  They are now permitted and processed properly.

- build.xml no longer hard-codes jikes compiler. To use jikes, either
  pass 

      -Dbuild.compiler=jikes 

  to ant, or put that option in ANT_OPTS in your personal ant startup file
  ($HOME/.antrc on Unix, or %HOME%\antrc_pre.bat on Windows).

- build.xml corrected so it no longer unconditionally recompiles everything.

- Serializable classes now provide their own serialVersionUID variable, per
  recommendations in the JDK 1.5 java.io.Serializable docs and in jikes
  1.22 warnings.


Version 1.1.5 (02 December, 2004)

- Added getOptionalCardinalValue() and getRequiredCardinalValue() utility
  methods to org.clapper.util.config.Configuration class.


Version 1.1.4 (10 November, 2004)

- Added new methods in the org.clapper.util.mail.EmailAddress, allowing
  specification of a file name to setText() and addAttachment() methods.
  The file name is used to specify the suggested file name in the MIME
  headers. Also fixed some bugs relating to the assignment of file names
  and determination of MIME types for attachments.

- Added MIMETypeUtil class, with enhanced methods to map from a file name
  or extension to a MIME type (similar to what the JDK provides), and to
  map from a MIME type to a preferred extension (which the JDK does not
  provide).


Version 1.1.3 (30 October, 2004)

- Added org.clapper.util.misc.FileHashMap class, a Map that keeps the keys
  in memory, but stores the values as serialized objects in a random access
  disk file.

- Added message() method to org.clapper.util.logging.Logger class.


Version 1.1.2 (20 October, 2004)

- Moved org.clapper.util.misc.JDK14TextLogFormatter and
  org.clapper.util.misc.Logger classes to the org.clapper.util.logging
  package. Renamed JDK14TextLogFormatter to JavaUtilLoggingTextFormatter.

- org.clapper.util.logging.Logger is now implemented directly in terms of
  java.util.logging, eliminating another third-party dependency. Consult
  the javadocs for org.clapper.logging.Logger for complete rationale.


Version 1.1.1 (12 October, 2004)

- Added org.clapper.util.misc.JDK14TextLogFormatter class, a simple
  text log formatter for the 1.4 JDK java.util.logging infrastructure.

- Simplified loading of API version, in build.xml. Instead of loading
  version from Version.class, it now loads the version from a properties
  file. The Version class uses the same properties file, as a resource
  bundle.


Version 1.1 (07 October, 2004):

- Now requires JDK 1.4 or better. JDK 1.3 is no longer supported. Among
  the reasons for this requirement:

  * I wanted to use the new assertion capabilities of 1.4

  * The regular expression classes that come with 1.4 are more extensible
    than the Jakarta ORO classes; they work with anything that implements
    the CharSequence interface, not just with Strings. Plus, using
    java.util.regexp, instead of Jakarta ORO, removes a third-party library
    dependency.

  * The JDK 1.4 version of String introduces a split() method, obviating
    the need to provide those methods in TextUtil.

- Converted code that used Jakarta ORO to use the JDK 1.4 java.util.regexp
  classes. Includes introduction of new org.clapper.util.regex.RegexUtil
  class, which provides a substitute() method that takes the place of
  org.apache.oro.text.perl.Perl5Util's substitute() method.

- Added new org.clapper.util.misc.LRUMap class, which implements a simple
  least recently used map.

- org.clapper.util.misc.NestedException is now implemented in terms of the
  built-in exception chaining in the 1.4 JDK. NestedException is retained
  for backward compatibility and because it provides support for localizing
  exception messages.

- Added parseIntParameter(), parseIntOptionArgument(), parseFloatParameter(),
  parseFloatOptionArgument(), etc., parameter parsing helper methods to
  CommandLineUtility class.

- Overhauled build.xml to make compilations more efficient. Requires a
  newer version of Jikes (if compiling with Jikes).

- Cleaned up a lot of unnecessary imports. Addressed minor issues that
  Jikes warned about.

- Minor javadoc changes and adjustments.


Version 1.0.2 (24 September, 2004):

- Drastically simplified word-wrapping logic in org.clapper.io.WordWrapWriter.
- Added rightJustifyString(), leftJustifyString() and centerString() methods
  to org.clapper.util.text.TextUtil.
- Added org.clapper.util.io.JustifyTextWriter class.


Version 1.0.1 (16 September, 2004):

- New methods (copyTextFile, copyReader, etc.) in org.clapper.util.io.FileUtil.
  copyTextFile() explicitly handles character set conversion.
- FileUtil copy methods no longer do their own buffering. They use the
  appropriate java.io.Buffered* classes, instead.
- Miscellaneous javadocs enhancements.


Version 1.0 (29 August, 2004):

- First version posted to the web.
